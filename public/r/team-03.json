{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "team-03",
  "type": "registry:block",
  "title": "Team 03",
  "description": "A simple team block",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "tailwind-merge",
    "lucide-react"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "src/blocks/team-03/team-03.tsx",
      "content": "import { Button } from \"@/components/ui/button\";\nimport { DribbbleIcon, TwitchIcon, TwitterIcon } from \"lucide-react\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\n\nconst teamMembers = [\n  {\n    name: \"John Doe\",\n    title: \"Founder & CEO\",\n    bio: \"Former co-founder of Opendoor. Early staff at Spotify and Clearbit.\",\n    imageUrl:\n      \"https://images.pexels.com/photos/3785079/pexels-photo-3785079.jpeg?auto=compress&cs=tinysrgb&w=600\",\n  },\n  {\n    name: \"Jane Doe\",\n    title: \"Engineering Manager\",\n    bio: \"Lead engineering teams at Figma, Pitch, and Protocol Labs.\",\n    imageUrl:\n      \"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&w=600\",\n  },\n  {\n    name: \"Bob Smith\",\n    title: \"Product Manager\",\n    bio: \"Former PM for Linear, Lambda School, and On Deck.\",\n    imageUrl:\n      \"https://images.pexels.com/photos/91227/pexels-photo-91227.jpeg?auto=compress&cs=tinysrgb&w=600\",\n  },\n  {\n    name: \"Peter Johnson\",\n    title: \"Frontend Developer\",\n    bio: \"Former frontend dev for Linear, Coinbase, and Postscript.\",\n    imageUrl:\n      \"https://images.pexels.com/photos/2379005/pexels-photo-2379005.jpeg?auto=compress&cs=tinysrgb&w=600\",\n  },\n  {\n    name: \"David Lee\",\n    title: \"Backend Developer\",\n    bio: \"Lead backend dev at Clearbit. Former Clearbit and Loom.\",\n    imageUrl:\n      \"https://images.pexels.com/photos/2182970/pexels-photo-2182970.jpeg?auto=compress&cs=tinysrgb&w=600\",\n  },\n  {\n    name: \"Sarah Williams\",\n    title: \"Product Designer\",\n    bio: \"Founding design team at Figma. Former Pleo, Stripe, and Tile.\",\n    imageUrl:\n      \"https://images.pexels.com/photos/733872/pexels-photo-733872.jpeg?auto=compress&cs=tinysrgb&w=600\",\n  },\n];\n\nconst Team03Page = () => {\n  return (\n    <div className=\"flex flex-col lg:flex-row justify-center py-8 sm:py-16 px-6 lg:px-8 max-w-screen-xl mx-auto gap-14\">\n      <div className=\"sm:max-w-sm lg:max-w-xs\">\n        <b className=\"text-muted-foreground font-semibold\">Our team</b>\n        <h2 className=\"mt-3 text-3xl md:text-4xl font-bold tracking-tight\">\n          Leadership Team\n        </h2>\n        <p className=\"mt-4 text-base sm:text-lg\">\n          We&apos;re a cross-disciplinary team that loves to create great\n          experiences for our customers.\n        </p>\n        <div className=\"mt-8 flex flex-col sm:flex-row-reverse sm:justify-end gap-3\">\n          <Button size=\"lg\">Open Positions</Button>\n          <Button size=\"lg\" variant=\"outline\">\n            About Us\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"w-full grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-x-10 gap-y-12\">\n        {teamMembers.map((member) => (\n          <div key={member.name} className=\"flex items-start md:flex-col gap-4\">\n            <Image\n              src={member.imageUrl}\n              alt={member.name}\n              className=\"shrink-0 h-16 w-16 sm:h-20 sm:w-20 rounded-full object-cover bg-secondary\"\n              width={120}\n              height={120}\n            />\n            <div>\n              <h3 className=\"text-lg font-semibold\">{member.name}</h3>\n              <p className=\"text-muted-foreground text-sm\">{member.title}</p>\n              <p className=\"mt-2\">{member.bio}</p>\n              <div className=\"mt-4 flex items-center gap-2.5\">\n                <Button\n                  className=\"bg-accent hover:bg-accent shadow-none\"\n                  size=\"icon\"\n                  asChild\n                >\n                  <Link href=\"#\" target=\"_blank\">\n                    <TwitterIcon className=\"stroke-muted-foreground\" />\n                  </Link>\n                </Button>\n                <Button\n                  className=\"bg-accent hover:bg-accent shadow-none\"\n                  size=\"icon\"\n                  asChild\n                >\n                  <Link href=\"#\" target=\"_blank\">\n                    <DribbbleIcon className=\"stroke-muted-foreground\" />\n                  </Link>\n                </Button>\n                <Button\n                  className=\"bg-accent hover:bg-accent shadow-none\"\n                  size=\"icon\"\n                  asChild\n                >\n                  <Link href=\"#\" target=\"_blank\">\n                    <TwitchIcon className=\"stroke-muted-foreground\" />\n                  </Link>\n                </Button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Team03Page;\n",
      "type": "registry:block",
      "target": "components/team-03/team-03.tsx"
    },
    {
      "path": "src/components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "src/lib/utils.ts",
      "content": "import { config } from \"@/config\";\nimport { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n\treturn twMerge(clsx(inputs));\n}\n\nexport function capitalize(str: string) {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype GroupBy<T, K extends keyof T> = Record<string, T[]>;\n\nexport function groupBy<T, K extends keyof T>(\n\tarray: T[],\n\tkey: K,\n): GroupBy<T, K> {\n\treturn array.reduce(\n\t\t(acc, item) => {\n\t\t\tconst keyValue = String(item[key]);\n\t\t\tif (!acc[keyValue]) {\n\t\t\t\tacc[keyValue] = [];\n\t\t\t}\n\t\t\tacc[keyValue].push(item);\n\t\t\treturn acc;\n\t\t},\n\t\t{} as GroupBy<T, K>,\n\t);\n}\n\nexport function absoluteUrl(path: string) {\n\treturn process.env.NODE_ENV === \"development\"\n\t\t? `http://localhost:3000${path}`\n\t\t: `https://${config.appUrl}${path}`;\n}\n",
      "type": "registry:lib",
      "target": ""
    },
    {
      "path": "src/config.ts",
      "content": "export const config = {\n  appUrl:\n    process.env.NODE_ENV === \"production\"\n      ? process.env.VERCEL_PROJECT_PRODUCTION_URL ??\n        process.env.NEXT_PUBLIC_APP_URL!\n      : \"localhost:3000\",\n  social: {\n    github: \"https://github.com/akash3444/shadcn-ui-blocks\",\n    twitter: \"https://twitter.com/akash_3444\",\n  },\n};\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}