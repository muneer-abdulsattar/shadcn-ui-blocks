{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "table-08",
  "type": "registry:component",
  "title": "Overflow Scroll Table",
  "description": "A table with overflow scroll",
  "dependencies": [
    "clsx",
    "tailwind-merge"
  ],
  "registryDependencies": [
    "table"
  ],
  "files": [
    {
      "path": "src/components/customized/table/table-08.tsx",
      "content": "import {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\nconst products = [\n  {\n    id: 101,\n    name: \"Wireless Headphones\",\n    category: \"Electronics\",\n    price: 59.99,\n    rating: 4.5,\n    stockQuantity: 120,\n    supplier: \"SoundTech Ltd\",\n    dateAdded: \"2024-01-15\",\n  },\n  {\n    id: 102,\n    name: \"Yoga Mat\",\n    category: \"Sports & Fitness\",\n    price: 25.0,\n    rating: 4.8,\n    stockQuantity: 200,\n    supplier: \"FitGear Inc\",\n    dateAdded: \"2024-01-20\",\n  },\n  {\n    id: 103,\n    name: \"Coffee Maker\",\n    category: \"Home Appliances\",\n    price: 80.0,\n    rating: 4.2,\n    stockQuantity: 80,\n    supplier: \"HomeBrew Supplies\",\n    dateAdded: \"2024-02-05\",\n  },\n  {\n    id: 104,\n    name: \"Running Shoes\",\n    category: \"Sportswear\",\n    price: 70.0,\n    rating: 4.6,\n    stockQuantity: 150,\n    supplier: \"RunWell Co.\",\n    dateAdded: \"2024-03-15\",\n  },\n  {\n    id: 105,\n    name: \"Smartwatch\",\n    category: \"Electronics\",\n    price: 120.0,\n    rating: 4.7,\n    stockQuantity: 60,\n    supplier: \"TechTime\",\n    dateAdded: \"2024-04-10\",\n  },\n  {\n    id: 106,\n    name: \"Gaming Mouse\",\n    category: \"Electronics\",\n    price: 45.0,\n    rating: 4.3,\n    stockQuantity: 95,\n    supplier: \"GamePro Gear\",\n    dateAdded: \"2024-04-22\",\n  },\n  {\n    id: 107,\n    name: \"Blender\",\n    category: \"Kitchen Appliances\",\n    price: 55.0,\n    rating: 4.4,\n    stockQuantity: 110,\n    supplier: \"KitchenEssentials\",\n    dateAdded: \"2024-05-05\",\n  },\n  {\n    id: 108,\n    name: \"Electric Kettle\",\n    category: \"Kitchen Appliances\",\n    price: 30.0,\n    rating: 4.1,\n    stockQuantity: 130,\n    supplier: \"HomeEssentials\",\n    dateAdded: \"2024-05-18\",\n  },\n  {\n    id: 109,\n    name: \"Office Chair\",\n    category: \"Furniture\",\n    price: 150.0,\n    rating: 4.6,\n    stockQuantity: 50,\n    supplier: \"FurniPro\",\n    dateAdded: \"2024-06-01\",\n  },\n  {\n    id: 110,\n    name: \"LED Desk Lamp\",\n    category: \"Lighting\",\n    price: 20.0,\n    rating: 4.5,\n    stockQuantity: 210,\n    supplier: \"BrightLight\",\n    dateAdded: \"2024-06-10\",\n  },\n];\n\nexport default function TableOverflowScrollDemo() {\n  return (\n    <div className=\"grid w-full [&>div]:max-h-[300px] [&>div]:border [&>div]:rounded\">\n      <Table>\n        <TableHeader>\n          <TableRow className=\"[&>*]:whitespace-nowrap\">\n            <TableHead className=\"pl-4\">ID</TableHead>\n            <TableHead>Product Name</TableHead>\n            <TableHead>Category</TableHead>\n            <TableHead>Price (USD)</TableHead>\n            <TableHead>Rating</TableHead>\n            <TableHead>Stock Quantity</TableHead>\n            <TableHead>Supplier</TableHead>\n            <TableHead>Date Added</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody className=\"overflow-hidden\">\n          {products.map((product) => (\n            <TableRow\n              key={product.id}\n              className=\"odd:bg-muted/50 [&>*]:whitespace-nowrap\"\n            >\n              <TableCell className=\"pl-4\">{product.id}</TableCell>\n              <TableCell className=\"font-medium\">{product.name}</TableCell>\n              <TableCell>{product.category}</TableCell>\n              <TableCell>{product.price}</TableCell>\n              <TableCell>{product.rating}</TableCell>\n              <TableCell>{product.stockQuantity}</TableCell>\n              <TableCell>{product.supplier}</TableCell>\n              <TableCell>{product.dateAdded}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/components/ui/table.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "src/lib/utils.ts",
      "content": "import { config } from \"@/config\";\nimport { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype GroupBy<T, K extends keyof T> = Record<string, T[]>;\n\nexport function groupBy<T, K extends keyof T>(\n  array: T[],\n  key: K\n): GroupBy<T, K> {\n  return array.reduce((acc, item) => {\n    const keyValue = String(item[key]);\n    if (!acc[keyValue]) {\n      acc[keyValue] = [];\n    }\n    acc[keyValue].push(item);\n    return acc;\n  }, {} as GroupBy<T, K>);\n}\n\nexport function absoluteUrl(path: string) {\n  return process.env.NODE_ENV === \"development\"\n    ? `http://localhost:3000${path}`\n    : `https://${config.appUrl}${path}`;\n}\n",
      "type": "registry:lib",
      "target": ""
    },
    {
      "path": "src/config.ts",
      "content": "export const config = {\n  appUrl:\n    process.env.NODE_ENV === \"production\"\n      ? process.env.VERCEL_PROJECT_PRODUCTION_URL ??\n        process.env.NEXT_PUBLIC_APP_URL!\n      : \"localhost:3000\",\n  social: {\n    github: \"https://github.com/akash3444/shadcn-ui-blocks\",\n    twitter: \"https://twitter.com/akash_3444\",\n  },\n};\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}