{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "testimonial-04",
  "type": "registry:block",
  "title": "Testimonial 04",
  "description": "A simple testimonial block",
  "dependencies": [
    "@radix-ui/react-avatar",
    "clsx",
    "tailwind-merge",
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "avatar",
    "button",
    "https://www.shadcnui-blocks.com/r/marquee.json"
  ],
  "files": [
    {
      "path": "src/blocks/testimonial-04/testimonial-04.tsx",
      "content": "import { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport Marquee from \"@/components/ui/marquee\";\nimport Link from \"next/link\";\nimport React, { ComponentProps } from \"react\";\n\nconst testimonials = [\n  {\n    id: 1,\n    name: \"John Doe\",\n    designation: \"Software Engineer\",\n    company: \"TechCorp\",\n    testimonial:\n      \"This product has completely transformed the way we work. The efficiency and ease of use are unmatched!\",\n    avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n  },\n  {\n    id: 2,\n    name: \"Sophia Lee\",\n    designation: \"Data Analyst\",\n    company: \"InsightTech\",\n    testimonial:\n      \"This tool has saved me hours of work! The analytics and reporting features are incredibly powerful.\",\n    avatar: \"https://randomuser.me/api/portraits/women/6.jpg\",\n  },\n  {\n    id: 3,\n    name: \"Michael Johnson\",\n    designation: \"UX Designer\",\n    company: \"DesignPro\",\n    testimonial:\n      \"An amazing tool that simplifies complex tasks. Highly recommended for professionals in the industry.\",\n    avatar: \"https://randomuser.me/api/portraits/men/3.jpg\",\n  },\n  {\n    id: 4,\n    name: \"Emily Davis\",\n    designation: \"Marketing Specialist\",\n    company: \"BrandBoost\",\n    testimonial:\n      \"I've seen a significant improvement in our team's productivity since we started using this service.\",\n    avatar: \"https://randomuser.me/api/portraits/women/4.jpg\",\n  },\n  {\n    id: 5,\n    name: \"Daniel Martinez\",\n    designation: \"Full-Stack Developer\",\n    company: \"CodeCrafters\",\n    testimonial:\n      \"The best investment we've made! The support team is also super responsive and helpful.\",\n    avatar: \"https://randomuser.me/api/portraits/men/5.jpg\",\n  },\n  {\n    id: 6,\n    name: \"Jane Smith\",\n    designation: \"Product Manager\",\n    company: \"InnovateX\",\n    testimonial:\n      \"The user experience is top-notch! The interface is clean, intuitive, and easy to navigate.\",\n    avatar: \"https://randomuser.me/api/portraits/women/2.jpg\",\n  },\n];\n\nconst Testimonial04 = () => (\n  <div className=\"min-h-screen flex justify-center items-center py-12\">\n    <div className=\"h-full w-full\">\n      <h2 className=\"mb-10 text-5xl md:text-6xl font-bold text-center tracking-tight px-6\">\n        Testimonials\n      </h2>\n      <div className=\"relative\">\n        <div className=\"z-10 absolute left-0 inset-y-0 w-[15%] bg-gradient-to-r from-background to-transparent\" />\n        <div className=\"z-10 absolute right-0 inset-y-0 w-[15%] bg-gradient-to-l from-background to-transparent\" />\n        <Marquee pauseOnHover className=\"[--duration:20s]\">\n          <TestimonialList />\n        </Marquee>\n        <Marquee pauseOnHover reverse className=\"mt-0 [--duration:20s]\">\n          <TestimonialList />\n        </Marquee>\n      </div>\n    </div>\n  </div>\n);\n\nconst TestimonialList = () =>\n  testimonials.map((testimonial) => (\n    <div\n      key={testimonial.id}\n      className=\"min-w-96 max-w-sm bg-accent rounded-xl p-6\"\n    >\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <Avatar>\n            <AvatarFallback className=\"text-xl font-medium bg-primary text-primary-foreground\">\n              {testimonial.name.charAt(0)}\n            </AvatarFallback>\n          </Avatar>\n          <div>\n            <p className=\"text-lg font-semibold\">{testimonial.name}</p>\n            <p className=\"text-sm text-gray-500\">{testimonial.designation}</p>\n          </div>\n        </div>\n        <Button variant=\"ghost\" size=\"icon\" asChild>\n          <Link href=\"#\" target=\"_blank\">\n            <TwitterLogo className=\"w-4 h-4\" />\n          </Link>\n        </Button>\n      </div>\n      <p className=\"mt-5 text-[17px]\">{testimonial.testimonial}</p>\n    </div>\n  ));\n\nconst TwitterLogo = (props: ComponentProps<\"svg\">) => (\n  <svg\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <title>X</title>\n    <path\n      fill=\"currentColor\"\n      d=\"M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z\"\n    />\n  </svg>\n);\n\nexport default Testimonial04;\n",
      "type": "registry:block",
      "target": "components/testimonial-04/testimonial-04.tsx"
    },
    {
      "path": "src/components/ui/avatar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "src/lib/utils.ts",
      "content": "import { config } from \"@/config\";\nimport { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n\treturn twMerge(clsx(inputs));\n}\n\nexport function capitalize(str: string) {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype GroupBy<T, K extends keyof T> = Record<string, T[]>;\n\nexport function groupBy<T, K extends keyof T>(\n\tarray: T[],\n\tkey: K,\n): GroupBy<T, K> {\n\treturn array.reduce(\n\t\t(acc, item) => {\n\t\t\tconst keyValue = String(item[key]);\n\t\t\tif (!acc[keyValue]) {\n\t\t\t\tacc[keyValue] = [];\n\t\t\t}\n\t\t\tacc[keyValue].push(item);\n\t\t\treturn acc;\n\t\t},\n\t\t{} as GroupBy<T, K>,\n\t);\n}\n\nexport function absoluteUrl(path: string) {\n\treturn process.env.NODE_ENV === \"development\"\n\t\t? `http://localhost:3000${path}`\n\t\t: `https://${config.appUrl}${path}`;\n}\n",
      "type": "registry:lib",
      "target": ""
    },
    {
      "path": "src/config.ts",
      "content": "export const config = {\n  appUrl:\n    process.env.NODE_ENV === \"production\"\n      ? process.env.VERCEL_PROJECT_PRODUCTION_URL ??\n        process.env.NEXT_PUBLIC_APP_URL!\n      : \"localhost:3000\",\n  social: {\n    github: \"https://github.com/akash3444/shadcn-ui-blocks\",\n    twitter: \"https://twitter.com/akash_3444\",\n  },\n};\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "src/components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "src/components/ui/marquee.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport { ComponentProps } from \"react\";\n\ninterface MarqueeProps extends ComponentProps<\"div\"> {\n  className?: string;\n  reverse?: boolean;\n  pauseOnHover?: boolean;\n  children?: React.ReactNode;\n  vertical?: boolean;\n  repeat?: number;\n}\n\nexport default function Marquee({\n  className,\n  reverse,\n  pauseOnHover = false,\n  children,\n  vertical = false,\n  repeat = 4,\n  ...props\n}: MarqueeProps) {\n  return (\n    <div\n      {...props}\n      className={cn(\n        \"group flex overflow-hidden p-2 [--duration:40s] [--gap:1rem] [gap:var(--gap)]\",\n        {\n          \"flex-row\": !vertical,\n          \"flex-col\": vertical,\n        },\n        className\n      )}\n    >\n      {Array(repeat)\n        .fill(0)\n        .map((_, i) => (\n          <div\n            key={i}\n            className={cn(\"flex shrink-0 justify-around [gap:var(--gap)]\", {\n              \"animate-marquee flex-row\": !vertical,\n              \"animate-marquee-vertical flex-col\": vertical,\n              \"group-hover:[animation-play-state:paused]\": pauseOnHover,\n              \"[animation-direction:reverse]\": reverse,\n            })}\n          >\n            {children}\n          </div>\n        ))}\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}