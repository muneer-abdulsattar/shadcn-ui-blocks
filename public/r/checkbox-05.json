{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "checkbox-05",
  "type": "registry:component",
  "title": "Vertical Checkbox Group",
  "description": "A vertical checkbox group component",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-checkbox",
    "clsx",
    "tailwind-merge",
    "@radix-ui/react-icons",
    "lucide-react"
  ],
  "registryDependencies": [
    "checkbox"
  ],
  "files": [
    {
      "path": "src/components/customized/checkbox/checkbox-05.tsx",
      "content": "import { Checkbox } from \"@/components/ui/checkbox\";\nimport { Beer, IceCreamBowl, Pizza, Sandwich } from \"lucide-react\";\n\nconst options = [\n  {\n    name: \"pizza\",\n    label: \"Pizza\",\n    icon: Pizza,\n    defaultChecked: true,\n  },\n  {\n    name: \"sandwich\",\n    label: \"Sandwich\",\n    icon: Sandwich,\n    defaultChecked: true,\n  },\n  {\n    name: \"beer\",\n    label: \"Beer\",\n    icon: Beer,\n  },\n  {\n    name: \"ice-cream\",\n    label: \"Ice Cream\",\n    icon: IceCreamBowl,\n  },\n];\n\nexport default function CheckboxVerticalGroupDemo() {\n  return (\n    <div className=\"mt-2 flex flex-col items-start gap-4\">\n      {options.map(({ name, label, icon: Icon, defaultChecked }) => (\n        <div key={name} className=\"flex items-center gap-4\">\n          <Checkbox defaultChecked={defaultChecked} id={`${name}-vertical`} />\n          <label\n            htmlFor={`${name}-vertical`}\n            className=\"flex items-center gap-2 text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n          >\n            <Icon className=\"h-5 w-5\" />\n            {label}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/components/ui/checkbox.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { cn } from \"@/lib/utils\"\nimport { CheckIcon } from \"@radix-ui/react-icons\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <CheckIcon className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "src/lib/utils.ts",
      "content": "import { config } from \"@/config\";\nimport { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n\treturn twMerge(clsx(inputs));\n}\n\nexport function capitalize(str: string) {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype GroupBy<T, K extends keyof T> = Record<string, T[]>;\n\nexport function groupBy<T, K extends keyof T>(\n\tarray: T[],\n\tkey: K,\n): GroupBy<T, K> {\n\treturn array.reduce(\n\t\t(acc, item) => {\n\t\t\tconst keyValue = String(item[key]);\n\t\t\tif (!acc[keyValue]) {\n\t\t\t\tacc[keyValue] = [];\n\t\t\t}\n\t\t\tacc[keyValue].push(item);\n\t\t\treturn acc;\n\t\t},\n\t\t{} as GroupBy<T, K>,\n\t);\n}\n\nexport function absoluteUrl(path: string) {\n\treturn process.env.NODE_ENV === \"development\"\n\t\t? `http://localhost:3000${path}`\n\t\t: `https://${config.appUrl}${path}`;\n}\n",
      "type": "registry:lib",
      "target": ""
    },
    {
      "path": "src/config.ts",
      "content": "export const config = {\n  appUrl:\n    process.env.NODE_ENV === \"production\"\n      ? process.env.VERCEL_PROJECT_PRODUCTION_URL ??\n        process.env.NEXT_PUBLIC_APP_URL!\n      : \"localhost:3000\",\n  social: {\n    github: \"https://github.com/akash3444/shadcn-ui-blocks\",\n    twitter: \"https://twitter.com/akash_3444\",\n  },\n};\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}